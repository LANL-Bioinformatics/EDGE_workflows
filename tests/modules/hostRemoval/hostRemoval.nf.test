nextflow_workflow {

    name "Test Workflow HOSTREMOVAL"
    script "modules/hostRemoval/hostRemoval.nf"
    workflow "HOSTREMOVAL"

    test("PE Reads, Single Host") {

        when {
            params {
                shared {
                    outDir = "./testing_output"
                    projName = "testHR"
                }
                hostRemoval {
                    host = ["${projectDir}/test_data/Homo_sapiens.GRCh38.dna.chromosome.1.fa"]
                    cpus = 4
                }
                
            }
            workflow {
                """
                input[0] = params.hostRemoval.plus(params.shared)
                input[1] = [file("${projectDir}/test_data/Ecoli_10x.1.fastq"),file("${projectDir}/test_data/Ecoli_10x.2.fastq")]
                input[2] = file("${projectDir}/nf_assets/NO_FILE2")
                """
            }
        }

        then {
            print(workflow.out)
            print(path(workflow.out.paired.get(0)[0]).readLines()[0])
            print(path(workflow.out.paired.get(0)[0]).readLines().subList(0,5))
            assertAll(
                {assert workflow.success},
                {assert snapshot(workflow.out).match()}
            )
        }

    }

    test("SE Reads, Single Host") {

        when {
            params {
                shared {
                    outDir = "./testing_output"
                    projName = "testHR"
                }
                hostRemoval {
                    host = "${projectDir}/test_data/Homo_sapiens.GRCh38.dna.chromosome.1.fa"
                    cpus = 4
                }
                
            }
            workflow {
                """
                input[0] = params.hostRemoval.plus(params.shared)
                input[1] = [file("${projectDir}/nf_assets/NO_FILE")]
                input[2] = file("${projectDir}/test_data/Ecoli_10x.1.fastq")
                """
            }
        }

        then {
            assertAll(
                {assert workflow.success},
                {assert snapshot(workflow.out).match()}
            )
        }

    }

    test("SE Reads, Multi Host") {

        when {
            params {
                shared {
                    outDir = "./testing_output"
                    projName = "testHR"
                }
                hostRemoval {
                    host = ["${projectDir}/test_data/Homo_sapiens.GRCh38.dna.chromosome.1.fa", "${projectDir}/test_data/Homo_sapiens.GRCh38.dna.chromosome.2.fa"]
                    cpus = 4
                }
            }
            workflow {
                """
                input[0] = params.hostRemoval.plus(params.shared)
                input[1] = [file("${projectDir}/nf_assets/NO_FILE")]
                input[2] = file("${projectDir}/test_data/Ecoli_10x.1.fastq")
                """
            }
        }

        then {
            assertAll(
                {assert workflow.success},
                {assert snapshot(workflow.out).match()}
            )

        }

    }

    test("PE Reads, Multi Host") {

        when {
            params {
                shared {
                    outDir = "./testing_output"
                    projName = "testHR"
                }
                hostRemoval {
                    host = ["${projectDir}/test_data/Homo_sapiens.GRCh38.dna.chromosome.1.fa","${projectDir}/test_data/Homo_sapiens.GRCh38.dna.chromosome.2.fa"]
                    cpus = 4
                }
            }
            workflow {
                """
                input[0] = params.hostRemoval.plus(params.shared)
                input[1] = [file("${projectDir}/test_data/Ecoli_10x.1.fastq"),file("${projectDir}/test_data/Ecoli_10x.2.fastq")]
                input[2] = file("${projectDir}/nf_assets/NO_FILE2")
                """
            }
        }

        then {
            assertAll(
                {assert workflow.success},
                {assert snapshot(workflow.out).match()}
            )
              
        }

    }


}
